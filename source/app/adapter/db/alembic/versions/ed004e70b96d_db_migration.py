"""Polulate product table

Revision ID: ed004e70b96d
Revises: 7677ae1b0a24
Create Date: 2025-02-22 05:19:01.151332

"""

import csv
import uuid
from pathlib import Path
from typing import Sequence, Union

from alembic import op
from sqlalchemy import Select
from sqlalchemy.orm import Session

from source.app.adapter.db.model.category import Category
from source.app.adapter.db.model.product import Product

# revision identifiers, used by Alembic.
revision: str = "ed004e70b96d"
down_revision: Union[str, None] = "7677ae1b0a24"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    session = Session(op.get_bind())

    base_dir = Path(__file__).resolve().parents[1]
    product_csv = f"{base_dir}/csv/products.csv"

    category_dict = {}
    stmt = Select(Category.name, Category.id).distinct(Category.name)
    result = session.execute(stmt).all()
    for name, id in result:
        category_dict[name] = id

    with open(product_csv) as file:
        reader = csv.DictReader(file)
        for row in reader:
            product = Product(
                id=uuid.uuid4(),
                name=row["name"],
                description=row["description"],
                price=row["price"],
                stock=row["stock"],
                category_id=category_dict.get(row["category"], None),
            )
            session.add(product)
        session.commit()
    session.close()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
